
allprojects{
    group = 'com.8thlab'
    version=getVersionName()
}

subprojects{
    apply plugin: 'maven'
    apply plugin: 'signing'

    buildscript {
        repositories {
            mavenCentral()
        }
        dependencies {
            classpath 'com.android.tools.build:gradle:2.1.3'
        }
    }

    repositories {
        mavenCentral()
    }   

    uploadArchives {
        repositories {
            mavenDeployer {
                uniqueVersion=false
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: getSonatypeUsername(), password: getSonatypePassword())
                }

                snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                    authentication(userName: getSonatypeUsername(), password: getSonatypePassword())
                }

                pom.project {
                    name '8thLAB tracker SDK'
                    packaging 'aar'
                    description '8thLAB tracker SDK'
                    url 'https://github.com/8thlab/tracker-sdk-android'

                    scm {
                        connection 'scm:git@github.com:8thlab/tracker-sdk-android.git'
                        developerConnection 'scm:git@github.com:8thlab/tracker-sdk-android.git'
                        url 'https://github.com/8thlab/tracker-sdk-android'
                    }

                    licenses {
                        license {
                            name 'The Apache License, Version 2.0'
                            url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }

                    developers {
                        developer {
                            id 'riomus'
                            name 'Roman Bartusiak'
                            email 'r.bartusiak@8thlab.com'
                        }
                    }
                }
            }
        }
    }
}


def isReleaseBuild() {
    return version.contains("SNAPSHOT") == false
}

def getSonatypeUsername(){
    return System.getenv().getOrDefault("sonatypeUsername",ossSonatypeUsername)
}

def getVersionName(){
    return System.getenv().getOrDefault("version",VERSION_NAME)
}

def getSonatypePassword(){
    return System.getenv().getOrDefault("sonatypePassword",ossSonatypePassword)
}

task clean(type: Delete) {
    delete rootProject.buildDir
}


task buildWithUpload(dependsOn: ['clean', ':lib:build', ':sample:build' , ':lib:uploadArchives']) << {
}